{"version":3,"file":"component---src-pages-coffee-js-c126c515a0d5c1cddd2c.js","mappings":"0KAEA,MAAMA,EAAc,CAChBC,MAAO,SAGI,SAASC,IAMpB,IAAIC,EAAQ,IACPC,EAAcC,GAAmBC,EAAAA,SAAe,IAqBrD,OAnBAA,EAAAA,WAAgBC,UAIZ,IAAIC,QAAYC,MAAM,yCAClBC,QAAgBF,EAAIG,OACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAChCT,EAAMW,KACF,0BACI,uBAAKC,MAAO,CAAEd,MAAO,QAASe,SAAU,WACpC,uBAAKD,MAAO,CAAEd,MAAO,QAASgB,MAAO,SAAS,IAAE,uBAAKF,MAAOf,EAAakB,IAAKR,EAAQE,GAAGO,QAAS,KAClG,+BAAM,yBAAIT,EAAQE,GAAGQ,OAAU,MAAIV,EAAQE,GAAGS,gBAK9DhB,EAAgBF,EAAM,GACvB,IAGC,gCACI,oCACA,0BAAKC,GAGjB,C","sources":["webpack://sett-gatsby/./src/pages/coffee.js"],"sourcesContent":["import * as React from 'react'\n\nconst coffeeImage = {\n    width: '10rem'\n}\n\nexport default function Coffee() {\n    /*\n    1. Fetch data from https://api.sampleapis.com/coffee/hot\n    2. Transform into JSX\n    3. Rerender whenever the state is changed\n    */\n    let items = []\n    let [coffeeTitles, setCoffeeTitles] = React.useState([])\n\n    React.useEffect(async () => {\n\n        //run after the page finished loading\n        // fetch data from link\n        let res = await fetch('https://api.sampleapis.com/coffee/hot')\n        let coffees = await res.json()\n        for (let i = 0; i < coffees.length; i++) {\n            items.push(\n                <li>\n                    <div style={{ width: \"40rem\", overflow: \"hidden\" }}>\n                        <div style={{ width: \"11rem\", float: \"left\" }}> <img style={coffeeImage} src={coffees[i].image} /> </div>\n                        <div> <b>{coffees[i].title}</b> - {coffees[i].description}</div>\n                    </div>\n                </li>)\n        }\n\n        setCoffeeTitles(items)\n    }, [])\n\n    return (\n        <>\n            <h1>Coffee</h1>\n            <ul>{coffeeTitles}</ul>\n        </>\n    )\n}"],"names":["coffeeImage","width","Coffee","items","coffeeTitles","setCoffeeTitles","React","async","res","fetch","coffees","json","i","length","push","style","overflow","float","src","image","title","description"],"sourceRoot":""}